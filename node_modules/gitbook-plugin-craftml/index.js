var _ = require('lodash')
var path = require('path')

var tutorial = require('./tutorial')
module.exports = {
  website: {
    assets: "./book",
    js: [
      // "craftml.js"
    ],
    css: [
      "craftml.css"
      // "https://cdnjs.cloudflare.com/ajax/libs/materialize/0.97.3/css/materialize.min.css"
      // "https://fonts.googleapis.com/icon?family=Material+Icons"
    ],
    html: {
      // "body:start": '<script src="http://cdn.craftml.io/craftml-all-staging.js"></script>',
    }
  },
  // Extend templating filters
  filters: {
    // // Author will be able to write "{{ 'test'|myFilter }}"
    t: function(s) {
        var p = path.dirname(this.ctx.file.path)
        var relative = path.relative(p, `language/transform/${s}.html`)
        return `<span class="doc-link transform"><a href="./${relative}" target="_doc"><code>${s}</code></a></span>`
    },
    l: function(s) {
        var p = path.dirname(this.ctx.file.path)
        var relative = path.relative(p, `language/layout/${s}.html`)
        return `<span class="doc-link layout"><a href="./${relative}" target="_doc"><code>${s}</code></a></span>`
    },
    attr: function(s) {
        var p = path.dirname(this.ctx.file.path)
        // console.log('s',s,'p',p)
        var relative = path.relative(p, `language/directive/${s}.html`)
        return `<span class="doc-link attr"><a href="./${relative}" target="_doc"><code>${s}</code></a></span>`
    },
    tag: tutorial.tag
  },
  blocks: {
    tutorial,
    craftml: {
      process: function(blk) {
        var code = blk.body
        //  .replace(/-->/g, '-- >')
         .replace(/\{:/g, '{{')
         .replace(/:\}/g, '}}')
        // var src = 'https://craftml.io/v?content=' + encodeURIComponent(code.trim())
        var src = 'http://localhost:5000/v?content=' + encodeURIComponent(code.trim())
        return '<iframe src="' + src + '" width="770" height="315" frameborder="0" ></iframe>'
      }
    }
  }
}
